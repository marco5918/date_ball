const dbUtils = require('./../utils/db-util')

const user = {
  /*
  *
  * 数据库创建用户
  * @param {object} model 用户数据模型
  * @return {object} mysql 执行结果
  */
  async create(model){
    let result = await dbUtils.insertData('me', model)
    return result
  },

  /*
  * 查找一个存在用户的数据
  * @param {object} options 查找条件参数
  * @return {object|null}   查找结果
  */
  async getExistOne(options){
    let _sql = `
      SELECT * FROM me
      WHERE phone="${options.phone}" or login_user="${options.login_user}"
      limit 1
    `
    let result = await dbUtils.query(_sql)
    if(Array.isArray(result) && result.length > 0){
      result = result[0]
    }else{
      result = null
    }
    return result
  },

  /**
   * 根据用户名和密码查找用户
   * @param {object} options 用户名密码对象
   * @return {object|null}  查找结果
   */

   async getOneByUserNameOrPhoneAndPassword(options){
     let _sql = `
       SELECT * FROM me
       WHERE password="${options.password}" and (login_user="${options.login_user} or (phone="${options.phone})"
       LIMIT 1
     `
     let result = await dbUtils.query(_sql)
     if(Array.isArray(result) && result.length > 0){
       result = result[0]
     }else{
       result = null
     }
     return result
   },

   /**
    * 根据用户名查找用户信息
    * @param {string} login_user 用户账号名称
    * @return {object|null} 查找结果
    */
    async getUserInfoByLoginUser( login_user ){
      let result = await dbUtils.select('me','login_user',login_user,
    ['id','phone','favicon','name','nick_name','city','age','gender','job','hobby','info_id'])
      if(Array.isArray(result) && result.length > 0){
        result = result[0]
      }else{
        result = null
      }
      return result
    },
    /**
     * 根据篮球信息id获取篮球信息
     * @param {string} info_id 篮球信息id
     * @return {object|null} 查找结果
     */
     async getBasketBallInfoByInfoId( info_id ){
       let result = await dbUtils.select('hobby_basketball_info',info_id,
     ['id','phone','favicon','name','nick_name','city','age','gender','job','hobby','info_id'])
       if(Array.isArray(result) && result.length > 0){
         result = result[0]
       }else{
         result = null
       }
       return result
     },
}

module.exports = user
